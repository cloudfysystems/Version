name: SpeedyPos Gerar vers√£o

on:
  workflow_dispatch: # Roda apenas manualmente pelo painel do GitHub
    inputs:
      #version:
      #  description: 'Vers√£o do build'
      #  required: true
      #  default: '1.0.0'
      windows:
        description: 'Gerar vers√£o Windows?'        
        default: true
        type: boolean
      android:
        description: 'Gerar vers√£o Android?'        
        default: false
        type: boolean
env:
  VERSION: ${{vars.VERSAO}}
  BUILD: ${{vars.build}}
  SENHA_CERTIFICADO_CLOUDFY: ${{ secrets.SENHA_CERTIFICADO_CLOUDFY }}
  SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_KEY }}

  


jobs:                  
  Windows:
    if: ${{ inputs.windows }}
    runs-on: windows-latest    
    
    defaults:
      run:
        working-directory: ./flutter/speed
    permissions:
      contents: write    
        
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cloudfysystems/FLUTTER
          ref: main  # ou a branch/tag desejada
          token: ${{ secrets.GH_TOKEN }}
          path: flutter  
      # checkout do repositorio de vers√£o
      - uses: actions/checkout@v4
        with:
          path: version-repo     
       # Lendo a vers√£o atual do reposit√≥rio
      - name: Ler vers√£o atual 
        working-directory: version-repo
        shell: powershell
        run: |
          $json = Get-Content "version.json" | ConvertFrom-Json
          $json.speedy.patch++          
          echo "Versao patch: $($json.speedy.patch)"
          echo "Versao gerada: $($json.speedy.simple).$($json.speedy.patch)"
          echo "VERSAO=$($json.speedy.simple).$($json.speedy.patch)" >> $env:GITHUB_ENV          


      - name: Criar pasta e gravar prod.json
        run: |
            New-Item -ItemType Directory -Path "./env" -Force | Out-Null
            Set-Content -Path "./env/prod.json" -Value '${{ vars.env_prod }}'
            $json = Get-Content "./env/prod.json" | ConvertFrom-Json
            $json.version = "${{ env.VERSAO }}"
            $json | ConvertTo-Json -Depth 2 | Set-Content "./env/prod.json"          
        shell: pwsh      
    
      - name: Criar pasta dist
        run: |
            mkdir dist
        shell: pwsh     

      - name: Atualizar vers√£o
        shell: pwsh
        run: |
          (Get-Content pubspec.yaml) -replace '^version:.*', "version: $env:VERSION+$env:BUILD" | Set-Content pubspec.yaml
      - name: Ajeitar o longpath do git
        run: |
             git config --system core.longpaths true
      - name: üê¶ Setup Shorebird
        uses: shorebirdtech/setup-shorebird@v1        
        with:
          cache: true

          
      #- name: Mostrar caminho e conte√∫do do prod.json
      #  run: |
      #      $filePath = Resolve-Path "./env/prod.json"
      #      Write-Host "üìÅ Caminho do arquivo: $filePath"
      #      Write-Host "üìÑ Conte√∫do do arquivo:"
      #      Get-Content $filePath | ForEach-Object { Write-Host $_ }
      #  shell: pwsh
#

                

      - name: Build Windows EXE        
        run: shorebird release windows --dart-define-from-file="env/prod.json" --no-confirm --flutter-version="3.32.3" 
        continue-on-error: true
      - name: Verificar execut√°vel gerado com sucesso
        shell: pwsh        
        run: |
            if (!(Test-Path "build/windows/x64/runner/Release/speed.exe")) {
            Write-Error "Arquivo 'speed.exe' n√£o encontrado. Abortando workflow."
            exit 1
            } else {
            Write-Host "‚úÖ Build gerado com sucesso."
            }
        
      #- name: Assinar o execut√°vel
      #  run: sign.bat
      - name: Gerar o instalador
        run: makensis windowsinstallmaker.nsi
      #- name: Assinar o instalador
      #  run: signinstall.bat        
    
      - name: Upload do execut√°vel
        uses: actions/upload-artifact@v4        
        with:
          name: InstaladorSpeedyWindows
          path: flutter/speed/dist/CloudfySpeedyPos.exe
      

      - name: Criando o release 
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSAO }}
          name: Windows v${{ env.VERSAO }} Speedy
          files: flutter/speed/dist/CloudfySpeedyPos.exe
          body:  Release gerado automaticamente para windows.
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}            

  Android:
    if: ${{ inputs.android }}
    runs-on: windows-latest       
    defaults:
      run:
        working-directory: ./flutter/speed    
    steps:        
      - uses: actions/checkout@v4
        with:
          repository: cloudfysystems/FLUTTER
          ref: main  # ou a branch/tag desejada
          token: ${{ secrets.GH_TOKEN }}  # ou um token pessoal (PAT)
          path: flutter  
      # checkout do repositorio de vers√£o
      - uses: actions/checkout@v4
        with:
          path: version-repo     
       # Lendo a vers√£o atual do reposit√≥rio
      - name: Ler vers√£o atual 
        working-directory: version-repo
        shell: powershell
        run: |
          $json = Get-Content "version.json" | ConvertFrom-Json
          $json.speedy.patch++          
          echo "Versao patch: $($json.speedy.patch)"
          echo "Versao gerada: $($json.speedy.simple).$($json.speedy.patch)"
          echo "VERSAO=$($json.speedy.simple).$($json.speedy.patch)" >> $env:GITHUB_ENV          


      - name: Criar pasta e gravar prod.json
        run: |
            New-Item -ItemType Directory -Path "./env" -Force | Out-Null
            Set-Content -Path "./env/prod.json" -Value '${{ vars.env_prod }}'
            $json = Get-Content "./env/prod.json" | ConvertFrom-Json
            $json.version = "${{ env.VERSAO }}"
            $json | ConvertTo-Json -Depth 2 | Set-Content "./env/prod.json"          
        shell: pwsh          
      - name: Criar pasta e gravar prod.json
        run: |
            New-Item -ItemType Directory -Path "./env" -Force | Out-Null
            Set-Content -Path "./env/prod.json" -Value '${{ vars.env_prod }}'
            $json = Get-Content "./env/prod.json" | ConvertFrom-Json
            $json.version = "${{ env.VERSAO }}"
            $json | ConvertTo-Json -Depth 2 | Set-Content "./env/prod.json"          
        shell: pwsh 
      - name: Criar arquivo.jks a partir de base64
        run: |
            New-Item -ItemType Directory -Path certificado -Force | Out-Null
            $base64 = "${{ secrets.KEYSTORE }}"
            $bytes = [System.Convert]::FromBase64String($base64)
            [System.IO.File]::WriteAllBytes("certificado\certificado-keystore.jks", $bytes)
        shell: pwsh
      - name: Resolver problema incremental do gradle
        run: |
            Add-Content -Path './android/gradle.properties' -Value 'kotlin.incremental=false'            
        shell: pwsh
      - name: Atualizar vers√£o
        shell: pwsh
        run: |
          (Get-Content pubspec.yaml) -replace '^version:.*', "version: $env:VERSION+$env:BUILD" | Set-Content pubspec.yaml
      - name: Ajeitar o longpath do git
        run: |
             git config --system core.longpaths true    
      - name: üê¶ Setup Shorebird
        uses: shorebirdtech/setup-shorebird@v1
        with:
          cache: true   
        

      - name: Criar o arquivo key.properties
        run: |
           $conteudo = "storePassword=${{ secrets.SENHA_KEYSTORE }}`r`nkeyPassword=${{ secrets.SENHA_KEYSTORE }}`r`nkeyAlias=cloudfycardapio`r`nstoreFile=../../certificado/certificado-keystore.jks"
           Set-Content -Path "android/key.properties" -Value $conteudo
        shell: pwsh

      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
            distribution: 'oracle'
            java-version: '17'            
               

      - name: Build App Bundle (AAB)                
        run: shorebird release android --dart-define-from-file="env/prod.json"  --no-confirm --flutter-version="3.32.3" 
        continue-on-error: true
      - name: Verificar bundle gerado com sucesso
        shell: pwsh        
        run: |
            if (!(Test-Path "build/app/outputs/bundle/release/app-release.aab")) {
            Write-Error "Arquivo 'app-release.aab' n√£o encontrado. Abortando workflow."
            exit 1
            } else {
            Write-Host "‚úÖ Build gerado com sucesso."
            }  


      - name: Build APK        
        run: shorebird release android --dart-define-from-file="env/prod.json"  --artifact=apk --no-confirm --flutter-version="3.32.3" 
        continue-on-error: true

      - name: Verificar apk gerado com sucesso
        shell: pwsh
        
        run: |
            if (!(Test-Path "build/app/outputs/flutter-apk/app-release.apk")) {
            Write-Error "Arquivo 'app-release.apk' n√£o encontrado. Abortando workflow."
            exit 1
            } else {
            Write-Host "‚úÖ Build gerado com sucesso."
            }  

    
      - name: Upload da apk e do bundle
        uses: actions/upload-artifact@v4
        with:
          name: ApkBundleSpeedyAndroid
          path: |            
            flutter/speed/build/app/outputs/flutter-apk/app-release.apk 
            flutter/speed/build/app/outputs/bundle/release/app-release.aab
      - name: Criando o release 
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSAO }}android
          name: Android v${{ env.VERSAO }} Speedy
          files: |
            flutter/speed/build/app/outputs/flutter-apk/app-release.apk 
            flutter/speed/build/app/outputs/bundle/release/app-release.aab
          body:  Release gerado automaticamente para android.
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  #Job que vai atualizar o git, sincronizar os fontes        
  FinishJob:
    needs: [Android, Windows]    
    runs-on: ubuntu-latest
    if: ${{ success() }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cloudfysystems/FLUTTER
          ref: main  # ou a branch/tag desejada
          token: ${{ secrets.GH_TOKEN }}
          path: flutter  # ou um token pessoal (PAT) 
      # checkout do repositorio de vers√£o
      - uses: actions/checkout@v4
        with:
          path: version-repo
      # faz o merge do branch de dev com a produ√ß√£o
      - name: Fazer merge da branch de dev com produ√ß√£o        
        shell: pwsh
        run: |
          git config --global user.name "cloudfysystems"
          git config --global user.email "cloudfysystem@gmail.com"
          git pull origin production
          git checkout production          

          git merge origin/Ionic5 --no-ff -m "gerando versao na falcatrua"

          git push origin production
       # Lendo a vers√£o atual do reposit√≥rio
      - name: Ler vers√£o atual e atualizar o numero da versao
        working-directory: version-repo
        shell: powershell
        run: |
          $json = Get-Content "version.json" | ConvertFrom-Json
          $json.speedy.patch++
          $json | ConvertTo-Json -Depth 2 | Set-Content "version.json"                    
     
      # commit da atualiza√ß√£o da vers√£o
      - name: Commit das altera√ß√µes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: cloudfysystems
          author_email: cloudfysystems@gmail.com
          message: "alterada vers√£o do build"
          cwd: ./version-repo
          add: "version.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} 
     
        



      

     

      
