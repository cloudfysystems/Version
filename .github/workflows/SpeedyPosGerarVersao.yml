name: SpeedyPos Gerar vers√£o

on:
  workflow_dispatch: # Roda apenas manualmente pelo painel do GitHub
    inputs:
      #version:
      #  description: 'Vers√£o do build'
      #  required: true
      #  default: '1.0.0'
      windows:
        description: "Gerar vers√£o Windows?"
        default: true
        type: boolean
      android:
        description: "Gerar vers√£o Android?"
        default: true
        type: boolean
env:
  VERSION: ${{vars.VERSAO}}
  BUILD: ${{vars.build}}
  SENHA_CERTIFICADO_CLOUDFY: ${{ secrets.SENHA_CERTIFICADO_CLOUDFY }}
  SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_KEY }}
  SIGNATURE_APP_ID: ${{ secrets.SIGNATURE_APP_ID }}
  SIGNATURE_CERTIFICATE_NAME: ${{ secrets.SIGNATURE_CERTIFICATE_NAME }}
  SIGNATURE_VAULT_ID: ${{ secrets.SIGNATURE_VAULT_ID }}
  SIGNATURE_PASSWORD: ${{ secrets.SIGNATURE_PASSWORD }}
  SIGNATURE_TENANT_ID: ${{ secrets.SIGNATURE_TENANT_ID }}

jobs:
  Windows:
    runs-on: windows-latest

    defaults:
      run:
        working-directory: ./flutter/speed
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.windows }}
        with:
          repository: cloudfysystems/FLUTTER
          ref: main # ou a branch/tag desejada
          token: ${{ secrets.GH_TOKEN }}
          path: flutter
      - name: Instalar AzureSignTool
        if: ${{ inputs.windows }}
        run: dotnet tool install --global AzureSignTool
      # - name: assinar dll
      #   run: azuresigntool sign -kvu "${{env.SIGNATURE_VAULT_ID}}" -kvc "${{env.SIGNATURE_CERTIFICATE_NAME}}" -kvi "${{env.SIGNATURE_APP_ID}}" -kvs "${{env.SIGNATURE_PASSWORD}}" --azure-key-vault-tenant-id "${{env.#SIGNATURE_TENANT_ID}}" -tr http://timestamp.digicert.com -td sha256 ./dlls/CliSiTef64I.dll
      # checkout do repositorio de vers√£o
      - uses: actions/checkout@v4
        if: ${{ inputs.windows }}
        with:
          path: version-repo
        # Lendo a vers√£o atual do reposit√≥rio
      - name: Ler vers√£o atual
        if: ${{ inputs.windows }}
        working-directory: version-repo
        shell: powershell
        run: |
          $json = Get-Content "version.json" | ConvertFrom-Json
          $json.speedy.patch++          
          echo "Versao patch: $($json.speedy.patch)"
          echo "Versao gerada: $($json.speedy.simple).$($json.speedy.patch)"
          echo "VERSAO=$($json.speedy.simple).$($json.speedy.patch)" >> $env:GITHUB_ENV

      - name: Gerando o env/prod.json
        if: ${{ inputs.windows }}
        run: |
          New-Item -ItemType Directory -Path "./env" -Force | Out-Null
          Set-Content -Path "./env/prod.json" -Value '${{ vars.env_prod }}'
        shell: pwsh
      - name: Atualiza vers√£o no arquivo Dart
        if: ${{ inputs.windows }}
        shell: pwsh
        run: |
          $filePath = "lib/Environment/Version.dart"
          $novaVersao = "${{ env.VERSAO }}"  # ou outro valor din√¢mico
          (Get-Content $filePath) -replace 'const String Version = ".*?"', "const String Version = `"$novaVersao`"" | Set-Content $filePath

      - name: Criar pasta dist
        if: ${{ inputs.windows }}
        run: |
          mkdir dist
        shell: pwsh

      - name: Atualizar vers√£o
        if: ${{ inputs.windows }}
        shell: pwsh
        run: |
          (Get-Content pubspec.yaml) -replace '^version:.*', "version: $env:VERSAO" | Set-Content pubspec.yaml
      - name: Ajeitar o longpath do git
        if: ${{ inputs.windows }}
        run: |
          git config --system core.longpaths true
      - name: üê¶ Setup Shorebird
        uses: shorebirdtech/setup-shorebird@v1
        with:
          cache: true

      #- name: Mostrar caminho e conte√∫do do prod.json
      #  run: |
      #      $filePath = Resolve-Path "./env/prod.json"
      #      Write-Host "üìÅ Caminho do arquivo: $filePath"
      #      Write-Host "üìÑ Conte√∫do do arquivo:"
      #      Get-Content $filePath | ForEach-Object { Write-Host $_ }
      #  shell: pwsh
      #

      - name: Build Windows EXE
        shell: pwsh
        if: ${{ inputs.windows }}
        run: shorebird release windows --flutter-version 3.35.4 --no-confirm '--' --dart-define-from-file=env/prod.json
        continue-on-error: true
      - name: Verificar execut√°vel gerado com sucesso
        if: ${{ inputs.windows }}
        shell: pwsh
        run: |
          if (!(Test-Path "build/windows/x64/runner/Release/speed.exe")) {
          Write-Error "Arquivo 'speed.exe' n√£o encontrado. Abortando workflow."
          exit 1
          } else {
          Write-Host "‚úÖ Build gerado com sucesso."
          }

      #- name: Assinar o execut√°vel
      #  run: sign.bat
      - name: Gerar o instalador
        if: ${{ inputs.windows }}
        run: |
          .\sign.bat  
          makensis windowsinstallmaker.nsi
          .\signinstall.bat
      #- name: Assinar o instalador
      #  run: signinstall.bat

      - name: Upload do execut√°vel
        if: ${{ inputs.windows }}
        uses: actions/upload-artifact@v4
        with:
          name: InstaladorSpeedyWindows
          path: flutter/speed/dist/CloudfySpeedyPos.exe

  Android:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./flutter/speed
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.android }}
        with:
          repository: cloudfysystems/FLUTTER
          ref: main # ou a branch/tag desejada
          token: ${{ secrets.GH_TOKEN }} # ou um token pessoal (PAT)
          path: flutter
      # checkout do repositorio de vers√£o
      - uses: actions/checkout@v4
        if: ${{ inputs.android }}
        with:
          path: version-repo
        # Lendo a vers√£o atual do reposit√≥rio
      - name: Ler vers√£o atual
        if: ${{ inputs.android }}
        working-directory: version-repo
        shell: powershell
        run: |
          $json = Get-Content "version.json" | ConvertFrom-Json
          $json.speedy.patch++          
          echo "Versao patch: $($json.speedy.patch)"
          echo "Versao gerada: $($json.speedy.simple).$($json.speedy.patch)"
          echo "VERSAO=$($json.speedy.simple).$($json.speedy.patch)" >> $env:GITHUB_ENV

      - name: Gerando o env/prod.json
        if: ${{ inputs.android }}
        run: |
          New-Item -ItemType Directory -Path "./env" -Force | Out-Null
          Set-Content -Path "./env/prod.json" -Value '${{ vars.env_prod }}'
        shell: pwsh
      - name: Atualiza vers√£o no arquivo Dart
        if: ${{ inputs.android }}
        shell: pwsh
        run: |
          $filePath = "lib/Environment/Version.dart"
          $novaVersao = "${{ env.VERSAO }}"  # ou outro valor din√¢mico
          (Get-Content $filePath) -replace 'const String Version = ".*?"', "const String Version = `"$novaVersao`"" | Set-Content $filePath
      - name: Atualizar vers√£o
        if: ${{ inputs.android }}
        shell: pwsh
        run: |
          (Get-Content pubspec.yaml) -replace '^version:.*', "version: $env:VERSAO" | Set-Content pubspec.yaml
      - name: Criar arquivo.jks a partir de base64
        if: ${{ inputs.android }}
        run: |
          New-Item -ItemType Directory -Path certificado -Force | Out-Null
          $base64 = "${{ secrets.KEYSTORE }}"
          $bytes = [System.Convert]::FromBase64String($base64)
          [System.IO.File]::WriteAllBytes("certificado\certificado-keystore.jks", $bytes)
        shell: pwsh
      - name: Resolver problema incremental do gradle
        if: ${{ inputs.android }}
        run: |
          Add-Content -Path './android/gradle.properties' -Value 'kotlin.incremental=false'
        shell: pwsh
      - name: Ajeitar o longpath do git
        if: ${{ inputs.android }}
        run: |
          git config --system core.longpaths true
      - name: üê¶ Setup Shorebird
        if: ${{ inputs.android }}
        uses: shorebirdtech/setup-shorebird@v1
        with:
          cache: true

      - name: Criar o arquivo key.properties
        if: ${{ inputs.android }}
        run: |
          $conteudo = "storePassword=${{ secrets.SENHA_KEYSTORE }}`r`nkeyPassword=${{ secrets.SENHA_KEYSTORE }}`r`nkeyAlias=cloudfycardapio`r`nstoreFile=../../certificado/certificado-keystore.jks"
          Set-Content -Path "android/key.properties" -Value $conteudo
        shell: pwsh

      - name: Set Up Java
        if: ${{ inputs.android }}
        uses: actions/setup-java@v3.12.0
        with:
          distribution: "oracle"
          java-version: "17"

      - name: Build App Bundle(AAB) e Apk
        if: ${{ inputs.android }}
        run: shorebird release android --flutter-version 3.32.8 --no-confirm --artifact apk '--' --dart-define-from-file=env/prod.json
        continue-on-error: true
      - name: Verificar bundle gerado com sucesso
        if: ${{ inputs.android }}
        shell: pwsh
        run: |
          if (!(Test-Path "build/app/outputs/bundle/release/app-release.aab")) {
          Write-Error "Arquivo 'app-release.aab' n√£o encontrado. Abortando workflow."
          exit 1
          } else {
          Write-Host "‚úÖ Build gerado com sucesso."
          }

      - name: Verificar apk gerado com sucesso
        if: ${{ inputs.android }}
        shell: pwsh

        run: |
          if (!(Test-Path "build/app/outputs/flutter-apk/app-release.apk")) {
          Write-Error "Arquivo 'app-release.apk' n√£o encontrado. Abortando workflow."
          exit 1
          } else {
          Write-Host "‚úÖ Build gerado com sucesso."
          }

      - name: Upload da apk e do bundle
        if: ${{ inputs.android }}
        uses: actions/upload-artifact@v4
        with:
          name: ApkBundleSpeedyAndroid
          path: |
            flutter/speed/build/app/outputs/flutter-apk/app-release.apk 
            flutter/speed/build/app/outputs/bundle/release/app-release.aab

  #Job que vai atualizar o git, sincronizar os fontes
  FinishJob:
    needs: [Android, Windows]
    runs-on: windows-latest
    if: success() && ${{ (inputs.android || inputs.windows) }}
    permissions:
      contents: write
    defaults:
      run:
        working-directory: ./flutterrepo
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cloudfysystems/FLUTTER
          fetch-depth: 0 # necess√°rio para evitar "unrelated histories
          ref: main # ou a branch/tag desejada
          token: ${{ secrets.GH_TOKEN }}
          path: flutterrepo # ou um token pessoal (PAT)
      # checkout do repositorio de vers√£o
      - uses: actions/checkout@v4
        with:
          path: version-repo
      - name: Recuperando os commits entre produ√ß√£o e main
        id: log
        shell: pwsh
        run: |
          git config --global user.name "cloudfysystems"
          git config --global user.email "cloudfysystem@gmail.com"        
          git pull origin production          
          $commits = git log origin/production..origin/main --pretty=format:"- %s (%an)<br>" --no-merges          
          echo "commit_messages<<EOF" >> $env:GITHUB_OUTPUT
          echo "$commits" >> $env:GITHUB_OUTPUT
          echo "EOF" >> $env:GITHUB_OUTPUT
          git checkout production          

          git merge origin/main --no-ff -m "gerando versao na falcatrua" --allow-unrelated-histories

          git push origin production
        # Lendo a vers√£o atual do reposit√≥rio
      - name: Ler vers√£o atual e atualizar o numero da versao
        working-directory: version-repo
        shell: powershell
        run: |
          $json = Get-Content "version.json" | ConvertFrom-Json
          $json.speedy.patch++
          $json | ConvertTo-Json -Depth 2 | Set-Content "version.json"
           echo "VERSAO=$($json.speedy.simple).$($json.speedy.patch)" >> $env:GITHUB_ENV
      - name: Download artifact windows
        if: ${{ inputs.windows }}
        uses: actions/download-artifact@v4
        with:
          name: InstaladorSpeedyWindows
          path: ./downloaded
      - name: Download artifact Android
        if: ${{ inputs.android }}
        uses: actions/download-artifact@v4
        with:
          name: ApkBundleSpeedyAndroid
          path: ./downloadedApk
      - name: Listar diretorio
        working-directory: ./downloadedApk
        run: |
          dir
        continue-on-error: true

      - name: Criando o release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSAO }}
          name: v${{ env.VERSAO }} Speedy
          files: |
            downloaded/CloudfySpeedyPos.exe
            downloadedApk/flutter-apk/app-release.apk
            downloadedApk/bundle/release/app-release.aab
          body: Release gerado automaticamente para windows.
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Envia e-mail com resumo
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: mail.cloudfy.net.br
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "Speedy POS - Gerado vers√£o em produ√ß√£o "
          html_body: |
            <p><b>Ol√° time!</b></p>

            Foi gerada uma nova vers√£o em produ√ß√£o do SpeedyPOS, na vers√£o ${{env.VERSAO}}!<br><br>

            Commits inclu√≠dos:<br><br>

            <b>${{ steps.log.outputs.commit_messages }}</b><br><br>

            Segue o link para download:<br>
            <p><a href="https://github.com/cloudfysystems/Version/releases/download/v${{env.VERSAO}}/CloudfySpeedyPos.exe">CloudfySpeedyPos.exe</a></p>
            <p><a href="https://github.com/cloudfysystems/Version/releases/download/v${{env.VERSAO}}/app-release.apk">CloudfySpeedyPos.apk</a></p>

            <p><b>Menos foco, mais ansiedade!</b></p>

          to: ${{vars.EMAIL}}
          from: Cloudfy Vers√£o <noreply@cloudfy.net.br>
          secure: true

      # commit da atualiza√ß√£o da vers√£o
      - name: Commit das altera√ß√µes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: cloudfysystems
          author_email: cloudfysystems@gmail.com
          message: "alterada vers√£o do build"
          cwd: ./version-repo
          add: "version.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
