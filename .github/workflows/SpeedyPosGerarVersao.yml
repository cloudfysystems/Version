name: SpeedyPos Gerar vers√£o

on:
  workflow_dispatch: # Roda apenas manualmente pelo painel do GitHub
    inputs:
      #version:
      #  description: 'Vers√£o do build'
      #  required: true
      #  default: '1.0.0'
      windows:
        description: "Gerar vers√£o Windows?"
        default: true
        type: boolean
      android:
        description: "Gerar vers√£o Android?"
        default: true
        type: boolean
env:
  VERSION: ${{vars.VERSAO}}
  BUILD: ${{vars.build}}
  SENHA_CERTIFICADO_CLOUDFY: ${{ secrets.SENHA_CERTIFICADO_CLOUDFY }}
  SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_KEY }}
  SIGNATURE_APP_ID: ${{ secrets.SIGNATURE_APP_ID }}
  SIGNATURE_CERTIFICATE_NAME: ${{ secrets.SIGNATURE_CERTIFICATE_NAME }}
  SIGNATURE_VAULT_ID: ${{ secrets.SIGNATURE_VAULT_ID }}
  SIGNATURE_PASSWORD: ${{ secrets.SIGNATURE_PASSWORD }}
  SIGNATURE_TENANT_ID: ${{ secrets.SIGNATURE_TENANT_ID }}

jobs:
  Windows:
    runs-on: windows-latest

    defaults:
      run:
        working-directory: ./flutter/speed
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.windows }}
        with:
          repository: cloudfysystems/FLUTTER
          ref: main # ou a branch/tag desejada
          token: ${{ secrets.GH_TOKEN }}
          path: flutter
      - name: Instalar NSIS
        if: ${{ inputs.windows }}
        run: |
          choco install nsis -y
          echo "C:\Program Files (x86)\NSIS" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Verificar instala√ß√£o
        if: ${{ inputs.windows }}
        run: makensis /VERSION
      - name: Instalar AzureSignTool
        if: ${{ inputs.windows }}
        run: dotnet tool install --global AzureSignTool

      # - name: assinar dll
      #   run: azuresigntool sign -kvu "${{env.SIGNATURE_VAULT_ID}}" -kvc "${{env.SIGNATURE_CERTIFICATE_NAME}}" -kvi "${{env.SIGNATURE_APP_ID}}" -kvs "${{env.SIGNATURE_PASSWORD}}" --azure-key-vault-tenant-id "${{env.#SIGNATURE_TENANT_ID}}" -tr http://timestamp.digicert.com -td sha256 ./dlls/CliSiTef64I.dll
      # checkout do repositorio de vers√£o
      - uses: actions/checkout@v4
        if: ${{ inputs.windows }}
        with:
          path: version-repo
        # Lendo a vers√£o atual do reposit√≥rio
      - name: Ler vers√£o atual
        if: ${{ inputs.windows }}
        working-directory: version-repo
        shell: powershell
        run: |
          $json = Get-Content "version.json" | ConvertFrom-Json
          $json.speedy.build++
          $json.speedy.patch++
          echo "Versao Build: $($json.speedy.build)"
          echo "Versao patch: $($json.speedy.patch)"
          echo "Versao gerada: $($json.speedy.simple).$($json.speedy.patch)"
          echo "VERSAO=$($json.speedy.simple).$($json.speedy.patch)" >> $env:GITHUB_ENV

      - name: Gerando o env/prod.json
        if: ${{ inputs.windows }}
        run: |
          New-Item -ItemType Directory -Path "./env" -Force | Out-Null
          Set-Content -Path "./env/prod.json" -Value '${{ secrets.ENV_PROD }}'
        shell: pwsh
      - name: Atualiza vers√£o no arquivo Dart
        if: ${{ inputs.windows }}
        shell: pwsh
        run: |
          $filePath = "lib/Environment/Version.dart"
          $novaVersao = "${{ env.VERSAO }}"  # ou outro valor din√¢mico
          (Get-Content $filePath) -replace 'const String Version = ".*?"', "const String Version = `"$novaVersao`"" | Set-Content $filePath

      - name: Criar pasta dist
        if: ${{ inputs.windows }}
        run: |
          mkdir dist
        shell: pwsh

      - name: Atualizar vers√£o
        if: ${{ inputs.windows }}
        shell: pwsh
        run: |
          (Get-Content pubspec.yaml) -replace '^version:.*', "version: $env:VERSAO" | Set-Content pubspec.yaml
      - name: Ajeitar o longpath do git
        if: ${{ inputs.windows }}
        run: |
          git config --system core.longpaths true
      - name: üê¶ Setup Shorebird
        if: ${{ inputs.windows }}
        uses: shorebirdtech/setup-shorebird@v1
        with:
          cache: true

      #- name: Mostrar caminho e conte√∫do do prod.json
      #  run: |
      #      $filePath = Resolve-Path "./env/prod.json"
      #      Write-Host "üìÅ Caminho do arquivo: $filePath"
      #      Write-Host "üìÑ Conte√∫do do arquivo:"
      #      Get-Content $filePath | ForEach-Object { Write-Host $_ }
      #  shell: pwsh
      #

      - name: Build Windows EXE
        shell: pwsh
        if: ${{ inputs.windows }}
        run: shorebird release windows --flutter-version 3.35.4 --no-confirm '--' --dart-define-from-file=env/prod.json
        continue-on-error: true
      - name: Verificar execut√°vel gerado com sucesso
        if: ${{ inputs.windows }}
        shell: pwsh
        run: |
          if (!(Test-Path "build/windows/x64/runner/Release/speed.exe")) {
          Write-Error "Arquivo 'speed.exe' n√£o encontrado. Abortando workflow."
          exit 1
          } else {
          Write-Host "‚úÖ Build gerado com sucesso."
          }

      #- name: Assinar o execut√°vel
      #  run: sign.bat
      - name: Gerar o instalador
        if: ${{ inputs.windows }}
        run: |
          .\sign.bat  
          makensis windowsinstallmaker.nsi
          .\signinstall.bat
      #- name: Assinar o instalador
      #  run: signinstall.bat

      - name: Upload do execut√°vel
        if: ${{ inputs.windows }}
        uses: actions/upload-artifact@v4
        with:
          name: InstaladorSpeedyWindows
          path: flutter/speed/dist/CloudfySpeedyPos.exe
  Android:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./flutter/speed

    steps:
      # Clonar o reposit√≥rio principal do Flutter
      - uses: actions/checkout@v4
        if: ${{ inputs.android }}
        with:
          repository: cloudfysystems/FLUTTER
          ref: main
          token: ${{ secrets.GH_TOKEN }}
          path: flutter

      # Clonar o reposit√≥rio de vers√£o
      - uses: actions/checkout@v4
        if: ${{ inputs.android }}
        with:
          path: version-repo

      # Ler e atualizar a vers√£o
      - name: Ler vers√£o atual
        if: ${{ inputs.android }}
        working-directory: version-repo
        shell: bash
        run: |
          VERSION_FILE="version.json"
          BUILD=$(jq '.speedy.build += 1 | .speedy.build' $VERSION_FILE)
          PATCH=$(jq '.speedy.patch += 1 | .speedy.patch' $VERSION_FILE)
          SIMPLE=$(jq -r '.speedy.simple' $VERSION_FILE)
          echo "Versao Build: $BUILD"
          echo "Versao Patch: $PATCH"
          echo "Versao Gerada: $SIMPLE.$PATCH+$BUILD"
          echo "VERSAO=$SIMPLE.$PATCH+$BUILD" >> $GITHUB_ENV

      # Criar o arquivo env/prod.json
      - name: Gerar env/prod.json
        if: ${{ inputs.android }}
        run: |
          mkdir -p ./env
          echo '${{ secrets.ENV_PROD }}' > ./env/prod.json
          cat ./env/prod.json

      # Atualizar vers√£o no arquivo Dart
      - name: Atualiza vers√£o no arquivo Dart
        if: ${{ inputs.android }}
        shell: bash
        run: |
          FILE="lib/Environment/Version.dart"
          NOVA_VERSAO="${{ env.VERSAO }}"
          sed -i "s/const String Version = \".*\"/const String Version = \"$NOVA_VERSAO\"/" $FILE
          cat lib/Environment/Version.dart

      # Atualizar vers√£o no pubspec.yaml
      - name: Atualizar vers√£o no pubspec.yaml
        if: ${{ inputs.android }}
        shell: bash
        run: |
          sed -i "s/^version:.*/version: $VERSAO/" pubspec.yaml
          cat pubspec.yaml

      # Criar arquivo .jks a partir de base64
      - name: Criar arquivo .jks
        if: ${{ inputs.android }}
        shell: bash
        run: |
          mkdir -p certificado
          echo "${{ secrets.KEYSTORE }}" | base64 -d > certificado/certificado-keystore.jks

      # Resolver problema incremental do Gradle
      #- name: Resolver problema incremental do gradle
      #  if: ${{ inputs.android }}
      #  shell: bash
      #  run: |
      #    echo "kotlin.incremental=false" >> ./android/gradle.properties

      # Habilitar longpath do git (n√£o necess√°rio no Ubuntu, mas mantido por compatibilidade)
      #- name: Ajustar git longpath
      #  if: ${{ inputs.android }}
      #  run: git config --global core.longpaths true

      # Setup Shorebird
      - name: üê¶ Setup Shorebird
        if: ${{ inputs.android }}
        uses: shorebirdtech/setup-shorebird@v1
        with:
          cache: true

      # Criar arquivo key.properties
      - name: Criar arquivo key.properties
        if: ${{ inputs.android }}
        shell: bash
        run: |
          echo "storePassword=${{ secrets.SENHA_KEYSTORE }}" > android/key.properties
          echo "keyPassword=${{ secrets.SENHA_KEYSTORE }}" >> android/key.properties
          echo "keyAlias=cloudfycardapio" >> android/key.properties
          echo "storeFile=../../certificado/certificado-keystore.jks" >> android/key.properties

      # Set Up Java (usando Oracle JDK 17)
      - name: Set Up Java
        if: ${{ inputs.android }}
        uses: actions/setup-java@v3
        with:
          distribution: "oracle"
          java-version: "17"

      # Executar build do Shorebird
      - name: üöÄ Shorebird Release
        if: ${{ inputs.android }}
        id: shorebird-release
        uses: shorebirdtech/shorebird-release@v1
        with:
          args: --flavor=prod --artifact apk -- --dart-define-from-file=env/prod.json
          platform: android
          flutter-version: 3.32.8
          working-directory: ./flutter/speed

      # Verificar se o bundle foi gerado
      - name: Verificar bundle gerado
        if: ${{ inputs.android }}
        shell: bash
        run: |
          if [ ! -f "build/app/outputs/bundle/prodRelease/app-prod-release.aab" ]; then
            echo "‚ùå Arquivo .aab n√£o encontrado"
            exit 1
          else
            echo "‚úÖ Bundle gerado com sucesso"
          fi

      # Verificar se o APK foi gerado
      - name: Verificar APK gerado
        if: ${{ inputs.android }}
        shell: bash
        run: |
          if [ ! -f "build/app/outputs/apk/prod/release/app-prod-release.apk" ]; then
            echo "‚ùå APK n√£o encontrado"
            exit 1
          else
            echo "‚úÖ APK gerado com sucesso"
          fi

      # Upload dos artefatos
      - name: Upload da apk e do bundle
        if: ${{ inputs.android }}
        uses: actions/upload-artifact@v4
        with:
          name: ApkBundleSpeedyAndroid
          path: |
            flutter/speed/build/app/outputs/apk/prod/release/app-prod-release.apk
            flutter/speed/build/app/outputs/bundle/prodRelease/app-prod-release.aab
  #Job que vai atualizar o git, sincronizar os fontes
  FinishJob:
    needs: [Android, Windows]
    runs-on: ubuntu-latest
    if: success() && ${{ (inputs.android || inputs.windows) }}
    permissions:
      contents: write
    defaults:
      run:
        working-directory: ./flutterrepo

    steps:
      - uses: actions/checkout@v4
        with:
          repository: cloudfysystems/FLUTTER
          fetch-depth: 0
          ref: main
          token: ${{ secrets.GH_TOKEN }}
          path: flutterrepo

      - uses: actions/checkout@v4
        with:
          path: version-repo

      - name: Recuperando os commits entre produ√ß√£o e main
        id: log
        continue-on-error: true
        run: |
          git config --global user.name "cloudfysystems"
          git config --global user.email "cloudfysystem@gmail.com"
          git config --global pull.rebase false
          git pull origin production
          commits=$(git log origin/production..origin/main --pretty=format:"- %s (%an)<br>" --no-merges)
          {
            echo "commit_messages<<EOF"
            echo "$commits"
            echo "EOF"
          } >> $GITHUB_OUTPUT
          git checkout production
          git merge origin/main --no-ff -m "gerando versao na falcatrua" --allow-unrelated-histories
          git push origin production

      - name: Ler vers√£o atual e atualizar n√∫mero da vers√£o windows
        working-directory: version-repo
        if: ${{ inputs.windows }}
        run: |
          json=$(cat version.json)
          patch=$(echo "$json" | jq '.speedy.patch + 1' | tr -d '"')
          build=$(echo "$json" | jq '.speedy.build' | tr -d '"')
          simple=$(echo "$json" | jq -r '.speedy.simple')

          newjson=$(echo "$json" | jq ".speedy.patch=$patch | .speedy.build=$build")
          echo "$newjson" > version_windows.json          

          VERSAO="${simple}.${patch}"
          echo "Vers√£o gerada: $VERSAO"

          echo "VERSAO=$VERSAO" >> $GITHUB_ENV

          URLWINDOWS="https://github.com/cloudfysystems/Version/releases/download/v$VERSAO/CloudfySpeedyPos.exe"
          echo "$URLWINDOWS"
          TAGWINDOWS="<p><a href=\"$URLWINDOWS\">CloudfySpeedyPos.apk</a></p>"
          echo "$TAGWINDOWS"
          echo "TAGWINDOWS=$TAGWINDOWS" >> $GITHUB_ENV          
          echo "URLWINDOWS=$URLWINDOWS" >> $GITHUB_ENV

      - name: Ler vers√£o atual e atualizar n√∫mero da vers√£o android
        if: ${{ inputs.android }}
        working-directory: version-repo
        run: |
          json=$(cat version.json)
          patch=$(echo "$json" | jq '.speedy.patch + 1' | tr -d '"')
          build=$(echo "$json" | jq '.speedy.build + 1' | tr -d '"')
          simple=$(echo "$json" | jq -r '.speedy.simple')

          newjson=$(echo "$json" | jq ".speedy.patch=$patch | .speedy.build=$build")
          echo "$newjson" > version_android.json

          VERSAO="${simple}.${patch}"
          echo "Vers√£o gerada: $VERSAO"

          echo "VERSAO=$VERSAO" >> $GITHUB_ENV

          URLANDROID="https://github.com/cloudfysystems/Version/releases/download/v$VERSAO/CloudfySpeedyPos.apk"
          echo "$URLANDROID"
          TAGANDROID="<p><a href=\"$URLANDROID\">CloudfySpeedyPos.apk</a></p>"
          echo "$TAGANDROID"
          echo "TAGANDROID=$TAGANDROID" >> $GITHUB_ENV          
          echo "URLANDROID=$URLANDROID" >> $GITHUB_ENV

      - name: Gravar arquivo de versionamento
        working-directory: version-repo
        run: |
          if [ -f "version_android.json" ]; then
            echo "üîπ Usando version_android.json"
            json=$(cat version_android.json)            
          elif [ -f "version_windows.json" ]; then
            echo "üîπ Usando version_windows.json"
            json=$(cat version_windows.json)            
          else
            echo "‚ùå Nenhum arquivo de vers√£o encontrado!"
            exit 1
          fi           
          echo "$json" > version.json
          cat version.json

      - name: Download artifact windows
        if: ${{ inputs.windows }}
        uses: actions/download-artifact@v4
        with:
          name: InstaladorSpeedyWindows
          path: ./downloaded

      - name: Download artifact Android
        if: ${{ inputs.android }}
        uses: actions/download-artifact@v4
        with:
          name: ApkBundleSpeedyAndroid
          path: ./downloadedApk

      - name: Renomear arquivos Android
        if: ${{ inputs.android }}
        run: |
          echo "Renomeando APK e AAB..."
          if [ -f "downloadedApk/apk/prod/release/app-prod-release.apk" ]; then
            mv downloadedApk/apk/prod/release/app-prod-release.apk downloadedApk/apk/prod/release/CloudfySpeedyPos.apk
            echo "APK renomeado para CloudfySpeedyPos.apk"
          else
            echo "‚ö†Ô∏è APK n√£o encontrado!"
          fi

          if [ -f "downloadedApk/bundle/prodRelease/app-prod-release.aab" ]; then
            mv downloadedApk/bundle/prodRelease/app-prod-release.aab downloadedApk/bundle/prodRelease/CloudfySpeedyPos.aab
            echo "AAB renomeado para CloudfySpeedyPos.aab"
          else
            echo "‚ö†Ô∏è AAB n√£o encontrado!"
          fi

      - name: Criando o release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSAO }}
          name: v${{ env.VERSAO }} Speedy
          files: |
            downloaded/CloudfySpeedyPos.exe
            downloadedApk/apk/prod/release/CloudfySpeedyPos.apk
            downloadedApk/bundle/prodRelease/CloudfySpeedyPos.aab
          body: Release gerado automaticamente para windows.
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # NOVO PASSO: chama API antes de enviar e-mail
      # NOVO PASSO: chama API antes de enviar e-mail
      - name: Chamar API de altera√ß√£o de dados android
        if: ${{ inputs.android }}
        id: api_call_android
        run: |
          echo "Chamando API de valida√ß√£o..."
          response=$(curl -s -o response.txt -w "%{http_code}" \
            -X POST https://api.cloudfy.net.br/H02SF0107A \
            -H "Content-Type: application/json" \
            -d '{"JSON": true,"Parameters": {"Versao":"${{ env.VERSAO }}","PSW":"${{secrets.SENHA_API_ALTERAR_URL}}", "URL": "${{env.URLANDROID}}", "NR_ID": 5}}')

          echo "C√≥digo HTTP: $response"
          cat response.txt

          if [ "$response" != "200" ]; then
            echo "‚ùå Falha na chamada da API. Abortando workflow."
            exit 1
          fi
      - name: Chamar API de altera√ß√£o de dados windows
        if: ${{ inputs.windows }}
        id: api_call_windows
        run: |
          echo "Chamando API de valida√ß√£o..."
          response=$(curl -s -o response.txt -w "%{http_code}" \
            -X POST https://api.cloudfy.net.br/H02SF0107A \
            -H "Content-Type: application/json" \
            -d '{"JSON": true,"Parameters": {"Versao":"${{ env.VERSAO }}","PSW":"${{secrets.SENHA_API_ALTERAR_URL}}", "URL": "${{env.URLWINDOWS}}", "NR_ID": 4}}')

          echo "C√≥digo HTTP: $response"
          cat response.txt

          if [ "$response" != "200" ]; then
            echo "‚ùå Falha na chamada da API. Abortando workflow."
            exit 1
          fi

      - name: Envia e-mail com resumo
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: mail.cloudfy.net.br
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "Speedy POS - Gerado vers√£o em produ√ß√£o"
          html_body: |
            <p><b>Ol√° time!</b></p>

            Foi gerada uma nova vers√£o em produ√ß√£o do SpeedyPOS, na vers√£o ${{ env.VERSAO }}!<br><br>

            Commits inclu√≠dos:<br><br>

            <b>${{ steps.log.outputs.commit_messages }}</b><br><br>

            Segue o link para download:<br>
            ${{env.TAGWINDOWS}}
            ${{env.TAGANDROID}}

            <p><b>Menos foco, mais ansiedade!</b></p>
          to: ${{ vars.EMAIL }}
          from: Cloudfy Vers√£o <noreply@cloudfy.net.br>
          secure: true

      - name: Commit das altera√ß√µes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: cloudfysystems
          author_email: cloudfysystems@gmail.com
          message: "alterada vers√£o do build"
          cwd: ./version-repo
          add: "version.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
