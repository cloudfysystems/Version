name: CloudfyBlue Gerar versão

on:
  workflow_dispatch: # Roda apenas manualmente pelo painel do GitHub
    inputs:
      #version:
      #  description: 'Versão do build'
      #  required: true
      #  default: '1.0.0'
      windows:
        description: "Gerar versão Windows?"
        default: true
        type: boolean
      android:
        description: "Gerar versão Android?"
        default: false
        type: boolean
env:
  VERSION: ${{vars.VERSAO}}
  BUILD: ${{vars.build}}
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  Windows:
    if: ${{ inputs.windows }}
    runs-on: windows-2022
    defaults:
      run:
        working-directory: ionic5/PDV
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }} # Token de acesso ao GitHub, necessário para publicar releases

    steps:
      # Checkout do repositorio IONIC 5
      - uses: actions/checkout@v4
        with:
          repository: cloudfysystems/IONIC
          ref: Ionic5 # Branch padrão
          token: ${{ secrets.GH_TOKEN }}
          path: ionic5
      # checkout do repositorio de versão
      - uses: actions/checkout@v4
        with:
          path: version-repo     
      # Lendo a versão atual do repositório
      - name: Ler versão atual e atualizar package.json
        working-directory: version-repo
        shell: powershell
        run: |
          $json = Get-Content "version.json" | ConvertFrom-Json
          $json.blue.patch++                    
          echo "Versao patch: $($json.blue.patch)"
          echo "Versao gerada: $($json.blue.simple).$($json.blue.patch)"
          echo "VERSAO=$($json.blue.simple).$($json.blue.patch)" >> $env:GITHUB_ENV
      # com a versão atual gerada, atualizamos o package.json
      - name: Atualizar package.json
        shell: pwsh
        run: |
          $package = Get-Content -Raw -Path "package.json" | ConvertFrom-Json
          $package.version = "${{ env.VERSAO }}"
          $package | ConvertTo-Json -Depth 10 | Out-File -Encoding UTF8 "package.json"
          $package = Get-Content -Raw -Path "src/Electron/prod/package.json" | ConvertFrom-Json
          $package.version = "${{ env.VERSAO }}"
          $package | ConvertTo-Json -Depth 10 | Out-File -Encoding UTF8 "src/Electron/prod/package.json"

      # instalando o node.js 16
      - name: Instalar Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: "16"
      # setando o build do vscode e as variáveis para o nodegyp
      - name: Configurar ambiente de build para node-gyp
        shell: pwsh
        run: |
          echo "GYP_MSVS_VERSION=2022" | Out-File -FilePath $env:GITHUB_ENV -Append
          npm config set msvs_version 2022
      # instalando o python 3.10 (Necessário para compilar o serialport 12)
      - name: Instalar Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: 3.10
      # instalando o electron-builder 26 para gerar o instalador e assinar
      - name: Instalando o electron-builder
        run: |
          npm install -g electron-builder@26.0.12
        # instalando as dependências do projeto
      - name: rodando o npm i
        run: npm install
      # instalando o client do ionic 5
      - name: Instalar Ionic CLI v5
        run: |
          npm install -g ionic@5.4.16
      # Gerando o build do release
      - name: Criando o release
        run: |
          npm run BuildDesktop
        # Faz upload dos artifacts 
      - name: Upload do executavel windows 
        uses: actions/upload-artifact@v4
        with:
          name: InstaladorBlueWindows
          path: |            
            ionic5/PDV/dist/Cloudfyblue Setup ${{ env.VERSAO }}.exe             
      
      

  Android:
    if: ${{ inputs.android }}
    runs-on: windows-2022
    defaults:
      run:
        working-directory: ./PDV
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cloudfysystems/IONIC
          ref: Ionic5 # ou a branch/tag desejada
          token: ${{ secrets.GH_TOKEN }} # ou um token pessoal (PAT)
      - name: Instalar Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: "16"
      - name: Instalar Ionic CLI v5
        run: |
          npm install -g ionic@5.4.16
          npm i -g cordova@9.0.0
      - name: Adicionar plataform android
        run: ionic cordova platform add android
      - name: instalando o plugman
        run: npm install -g plugman@3.0.1
      - name: Compilar o plugin da cloudfy
        run: |
          plugman install --platform android --project platforms\android --plugin CordovaPluginCloudfy
      - name: Remover dependências do package.json
        if: false
        shell: pwsh
        run: |
          $packageJsonPath = "package.json"

          # Ler o conteúdo do package.json
          $json = Get-Content $packageJsonPath -Raw | ConvertFrom-Json

          # Lista de pacotes a remover
          $packagesToRemove = @("@thiagoelg/node-printer", "serialport")

          foreach ($pkg in $packagesToRemove) {
              if ($json.dependencies.$pkg) {
                  $json.dependencies.PSObject.Properties.Remove($pkg)
              }
              if ($json.devDependencies -and $json.devDependencies.$pkg) {
                  $json.devDependencies.PSObject.Properties.Remove($pkg)
              }
          }

          # Salvar o JSON modificado
          $json | ConvertTo-Json -Depth 10 | Set-Content $packageJsonPath -Encoding UTF8

      - name: Configurar ambiente de build para node-gyp
        shell: pwsh
        run: |
          echo "GYP_MSVS_VERSION=2022" | Out-File -FilePath $env:GITHUB_ENV -Append
          npm config set msvs_version 2022
      - name: Atualizar node-gyp para suportar VS2022
        run: |
          npm install node-gyp@8.4.0 -g
      - name: Instalar Python 2.7
        run: |
          choco install python2 --force -y
          echo "C:\Python27" | Out-File -Append -Encoding ascii $env:GITHUB_PATH
          echo "C:\Python27\Scripts" | Out-File -Append -Encoding ascii $env:GITHUB_PATH           
          # Cria um alias 'python2' apontando para 'python'
          New-Item -ItemType SymbolicLink -Path "C:\Python27\python2.exe" -Target "C:\Python27\python.exe"
      - name: Verificar Python
        run: |
          where python
          python --version
          python2 --version
      # Java 8
      - name: Instalar Java 8
        uses: actions/setup-java@v4
        with:
          distribution: "temurin" # ou 'adopt', se preferir
          java-version: "8"
      # Gradle 4
      - name: Instalar Gradle 4.10.3
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 4.10.3

      #- name: Instalar Python 3.10
      #  uses: actions/setup-python@v5
      #  with:
      #      python-version: '3.10'
      - name: rodando o npm i
        run: npm install
        # Ionic CLI 5

      #- name: Atualizar node-gyp
      #  run: npm install -g node-gyp@7
      #- name: instalando o grpc
      #  run: npm install grpc --grpc_node_binary_host_mirror=https://node-precompiled-binaries.grpc.io
      - name: Gerar a apk
        run: ionic cordova build android --prod --release

        # Verificação das versões
      - name: Verificar versões
        run: |
          java -version
          gradle -v
          node -v
          ionic -v
  #Job que vai atualizar o git, sincronizar os fontes        
  FinishJob:
    needs: [Windows]    
    runs-on: windows-latest
    if: success() 
    permissions:
      contents: write
    defaults:
      run:
        working-directory: ./ionic5
    steps:
      # Checkout do repositorio IONIC 5
      - uses: actions/checkout@v4
        with:
          repository: cloudfysystems/IONIC
          ref: Ionic5 # Branch padrão
          token: ${{ secrets.GH_TOKEN }}
          path: ionic5
      # checkout do repositorio de versão
      - uses: actions/checkout@v4
        with:
          path: version-repo
      - name: Recuperando os commits entre produção e main
        id: log
        shell: pwsh
        run: |  
          git config --global user.name "cloudfysystems"
          git config --global user.email "cloudfysystem@gmail.com"        
          git pull origin production                         
          
          $commits = git log origin/production..origin/Ionic5 --pretty=format:"- %s" --no-merges
          echo "commit_messages<<EOF" >> $env:GITHUB_OUTPUT
          echo "$commits" >> $env:GITHUB_OUTPUT
          echo "EOF" >> $env:GITHUB_OUTPUT
          git checkout production

          git merge origin/Ionic5 --no-ff -m "gerando versao na falcatrua" --allow-unrelated-histories

          git push origin production     
          
       # Lendo a versão atual do repositório
      - name: Ler versão atual e atualizar o numero da versao
        working-directory: version-repo        
        shell: powershell
        run: |
          $json = Get-Content "version.json" | ConvertFrom-Json
          $json.blue.patch++
          $json | ConvertTo-Json -Depth 2 | Set-Content "version.json"
           echo "VERSAO=$($json.blue.simple).$($json.blue.patch)" >> $env:GITHUB_ENV
      - name: Download artifact windows
        if: ${{ inputs.windows }}
        uses: actions/download-artifact@v4
        with:
          name: InstaladorBlueWindows
          path: ./downloaded
      - name: Download artifact Android
        if: ${{ inputs.android }}
        uses: actions/download-artifact@v4
        with:
          name: ApkBundleSpeedyAndroid
          path: ./downloadedApk               

      - name: Criando o release 
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSAO }}Blue
          name: v${{ env.VERSAO }} Blue 
          files: |
             downloaded/Cloudfyblue Setup ${{env.VERSAO}}.exe
          body:  Release gerado automaticamente para windows.
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}                 
      - name: Envia e-mail com resumo
        uses: dawidd6/action-send-mail@v3        
        with:
          server_address: mail.cloudfy.net.br  
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: 'Cloudfy blue - Gerado versão em produção '
          html_body : |
            <p><b>Olá time!</b></p>

            Foi gerada uma nova versão em produção do Cloudfy blue, na versão ${{env.VERSAO}}!<br><br>

            Commits incluídos:<br><br>

            ${{ steps.log.outputs.commit_messages }}<br><br>
            
            Segue o link para download:<br>
            <p><a href="https://github.com/cloudfysystems/Version/releases/download/v${{env.VERSAO}}Blue/Cloudfyblue.Setup.${{env.VERSAO}}.exe">Cloudfyblue Setup ${{env.VERSAO}}.exe</a></p>
            

            <p><b>Menos foco, mais ansiedade!</b></p>

          to: ${{vars.EMAIL}}
          from: Cloudfy Versão <noreply@cloudfy.net.br>
          secure: true              
                                                    
      # commit da atualização da versão
      - name: Commit das alterações        
        uses: EndBug/add-and-commit@v9
        with:
          author_name: cloudfysystems
          author_email: cloudfysystems@gmail.com
          message: "alterada versão do build"
          cwd: ./version-repo
          add: "version.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}